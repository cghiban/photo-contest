
<!DOCTYPE html>
<html>
    <head>
    {{template "header_head" .}}
    {{if .FullContest}}
    <title>Gallery</title>
    {{else}}
    <title>My Submissions</title>
    {{end}}
    </head>
    <body>
    {{template "header_body" .}}
    <h1 align="center">Photo Gallery</h1>
    Status:&emsp;&emsp;&ensp;&nbsp;
    {{if eq .Status ""}}All{{else}}<a href="/gallery">All</a>{{end}}&emsp;
    {{if eq .Status "active"}}Active{{else}}<a href="/gallery?status=active">Active</a>{{end}}&emsp;
    {{if eq .Status "eliminated"}}Eliminated{{else}}<a href="/gallery?status=eliminated">Eliminated</a>{{end}}&emsp;
    {{if eq .Status "flagged"}}Flagged{{else}}<a href="/gallery?status=flagged">Flagged</a>{{end}}&emsp;
    {{if eq .Status "semifinal"}}Semi-Final{{else}}<a href="/gallery?status=semifinal">Semi-Final</a>{{end}}&emsp;
    {{template "photo_gallery" . }}
    <script>
    const csrf = "{{.CSRF}}";
    const encodeFormData = (data) => {
        return new URLSearchParams(data);
    }
    async function postData(url, data) {
        const response = await fetch(url, {
            method: 'POST',
            mode: 'cors',
            cache: 'no-cache',
            credentials: 'same-origin',
            headers: {'Content-Type': 'application/x-www-form-urlencoded'},
            redirect: 'follow',
            referrerPolicy: 'no-referrer',
            body: encodeFormData(data)
        });
        return response.json();
    }
    document.addEventListener("DOMContentLoaded", function() {
        const params = new URLSearchParams(document.location.search.substring(1));
        const statusFilter = params.get("status");
        const statuses = document.getElementsByName("status");
        for (let i = 0; i < statuses.length; i++) {
            statuses[i].addEventListener("change", function(event) {
                const eTarget = event.target;
                const targetValue = eTarget.value;
                const confirmation = confirm("Are you sure you want to change the status to " + targetValue + "?");
                if (confirmation) {
                    const entryId = parseInt(statuses[i].id.replace(/\D+/g,''));
                    const p_data = {
                        "gorilla.csrf.Token": csrf,
                        "status": targetValue,
                        "entryId": entryId,
                    };
                    postData("/update_entry_status", p_data).then(
                        data => {
                            if(data["status"] === "error") {
                                alert("Error: " + message);
                            }
                        }
                    );
                    if (statusFilter) {
                        const row = eTarget.parentNode.parentNode;
                        row.parentNode.removeChild(row);
                    } else {
                        eTarget.querySelector("option[selected]").removeAttribute("selected");
                        document.querySelector("#" + statuses[i].id + " option[value=" + targetValue + "]").setAttribute("selected", "");
                    }
                } else {
                    statuses[i].value = eTarget.querySelector("option[selected]").value;
                }
            });
        }
    });
    </script>
    {{template "footer" .}}
    </body>
</html>